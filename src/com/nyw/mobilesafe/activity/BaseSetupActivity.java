package com.nyw.mobilesafe.activity;

import com.nyw.mobilesafe.R;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.View;
import android.view.GestureDetector.SimpleOnGestureListener;
import android.widget.Toast;

/*
 * 设置引导页的父类(基类)
 * 不需要在清单文件(AndroidManifest.xml)中注册,因为该界面不需要展示
 */
public abstract class BaseSetupActivity extends Activity {
	private GestureDetector mDectector;
	public SharedPreferences mPref;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		mPref = getSharedPreferences("config", MODE_PRIVATE);
		
		// 手势识别器
		mDectector = new GestureDetector(this, new SimpleOnGestureListener() {
			// 监听手势滑动事件
			@Override
			public boolean onFling(MotionEvent e1, MotionEvent e2,
					float velocityX, float velocityY) { // onFling的参数e1表示滑动的起点，e2表示滑动的终点，velocityX表示水平方向的滑动速度，velocityY表示垂直方向的滑动速度

				if(Math.abs(velocityX) < 150)
				{
					Toast.makeText(BaseSetupActivity.this, "划得太慢不能切换页面  你个二逼",
							Toast.LENGTH_SHORT).show();
					return true;
				}
				
				// 判断纵向滑动是否过大,纵向幅度太大不会切换界面
				if (Math.abs(e2.getRawY() - e1.getRawY()) > 100) {
					Toast.makeText(BaseSetupActivity.this, "要横着划  你个二逼",
							Toast.LENGTH_SHORT).show();
					return true;
				}

				// 向右划,返回上一页
				if (e2.getRawX() - e1.getRawX() > 200) {
					showPreviousPage();
					return true;
				}

				// 向左划,进入下一页
				if (e1.getRawX() - e2.getRawX() > 200) {
					showNextPage();
					return true;
				}

				return super.onFling(e1, e2, velocityX, velocityY);
			}
		});

	}

	/**
	 * 展示上一页,设为抽象方法,子类必须实现
	 */
	public abstract void showPreviousPage();

	/**
	 * 展示下一页,设为抽象方法,子类必须实现
	 */
	public abstract void showNextPage();

	/**
	 * 鼠标点击"下一步"按钮
	 * 
	 */
	public void next(View view) {
		showNextPage();
	}

	/**
	 * 鼠标点击"上一步"按钮
	 * 
	 */
	public void previous(View view) {
		showPreviousPage();
	}

	@Override
	public boolean onTouchEvent(MotionEvent event) {
		mDectector.onTouchEvent(event);// 委托手势识别器处理触摸事件
		return super.onTouchEvent(event);
	}
}
